game.StarterGui:SetCore("SendNotification", {
	Title = "Galactic Hub v1.2",
	Text = "Loading Hub",
	Duration = 5
})

wait(2)


local player = game.Players.LocalPlayer
local humanoid = player.Character:WaitForChild("Humanoid")
local MainGui = Instance.new("ScreenGui")
MainGui.Name = "Multivers Hub v1.2"
MainGui.Parent = player:WaitForChild("PlayerGui")

local ToggleButton = Instance.new("ImageButton")
ToggleButton.Image = "rbxassetid://347835104"
ToggleButton.Parent = MainGui
ToggleButton.Position = UDim2.new(0.185, 0, 0.070, 0) 
ToggleButton.Size = UDim2.new(0, 51, 0, 48)





local Corner1 = Instance.new("UICorner")
Corner1.Parent = ToggleButton

local f = Instance.new("Frame")
f.Name = "MainFrame"
f.Size = UDim2.new(0, 450, 0, 250)
f.Position = UDim2.new(0.5, 0, 0.5, -100) 
f.AnchorPoint = Vector2.new(0.5, 0.5)
f.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
f.Parent = MainGui
f.Visible = false



local GBGF = Instance.new("ImageLabel")
GBGF.Parent = f
GBGF.Image = "rbxassetid://347835104"
GBGF.Size = UDim2.new(0, 450, 0, 250)
GBGF.Visible = true

local HN = Instance.new("TextLabel")
HN.Text = "Galactic Hub v1.2"
HN.Parent = GBGF
HN.Size = UDim2.new(0, 200, 0, 40)
HN.TextColor3 = Color3.fromRGB(255, 255, 255)
HN.BackgroundColor3 = Color3.new(0, 0, 0)
HN.Position = UDim2.new(0, 125, 0, -20)
HN.BorderSizePixel = 0

local SizeConstraint = Instance.new("UISizeConstraint")
SizeConstraint.Parent = f

local SizeConstraint1 = Instance.new("UISizeConstraint")
SizeConstraint1.Parent = GBGF

local C1221 = Instance.new("UICorner")
C1221.Parent = HN
local Drag1 = Instance.new("UIDragDetector")
Drag1.Parent = f

--Ui Tabs
local TabsScrollingFrame = Instance.new("ScrollingFrame")
TabsScrollingFrame.Parent = f
TabsScrollingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabsScrollingFrame.Position = UDim2.new(0.5, -160, 0.5, 0) 
TabsScrollingFrame.Size = UDim2.new(0, 75, 0, 200)
TabsScrollingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
TabsScrollingFrame.ScrollBarImageTransparency = 1


local LocalPlayerTab = Instance.new("TextButton")
LocalPlayerTab.Position = UDim2.new(0.5, -37.5, 0, 0) 
LocalPlayerTab.Size = UDim2.new(0, 60, 0, 25)
LocalPlayerTab.Text = "Local Player"
LocalPlayerTab.Parent = TabsScrollingFrame
LocalPlayerTab.BackgroundColor3 = Color3.new(0, 0, 0)
LocalPlayerTab.TextColor3 = Color3.new(0.496925, 0.49453, 0.499336)

local CornerTab1 = Instance.new("UICorner")
CornerTab1.Parent = LocalPlayerTab


local VisualsTab = Instance.new("TextButton")
VisualsTab.Position = UDim2.new(0.5, -37.5, 0, 30) 
VisualsTab.TextXAlignment = "Left"
VisualsTab.BackgroundColor3 = Color3.new(0, 0, 0)
VisualsTab.Size = UDim2.new(0, 60, 0, 25)
VisualsTab.Text = 	"Visuals"
VisualsTab.TextColor3 = Color3.new(0.496925, 0.49453, 0.499336)
VisualsTab.Parent = TabsScrollingFrame
VisualsTab.BorderSizePixel = 0

local CornerTab2 = Instance.new("UICorner")
CornerTab2.Parent = VisualsTab


local TweenTab = Instance.new("TextButton")
TweenTab.Position = UDim2.new(0.5, -37.5, 0, 60) 
TweenTab.TextXAlignment = "Left"
TweenTab.BackgroundColor3 = Color3.new(0, 0, 0)
TweenTab.Size = UDim2.new(0, 60, 0, 25)
TweenTab.Text = 	"Tween Tab"
TweenTab.TextColor3 = Color3.new(0.496925, 0.49453, 0.499336)
TweenTab.Parent = TabsScrollingFrame

local CornerTab4 = Instance.new("UICorner")
CornerTab4.Parent = TweenTab

local SettingsTab = Instance.new("TextButton")
SettingsTab.Position = UDim2.new(0.5, -37.5, 0, 90) 
SettingsTab.TextXAlignment = "Left"
SettingsTab.BackgroundColor3 = Color3.new(0, 0, 0)
SettingsTab.Size = UDim2.new(0, 60, 0, 25)
SettingsTab.Text = 	"Settings"
SettingsTab.TextColor3 = Color3.new(0.496925, 0.49453, 0.499336)
SettingsTab.Parent = TabsScrollingFrame

local CornerTab3 = Instance.new("UICorner")
CornerTab3.Parent = SettingsTab



--Frames
local f1 = Instance.new("ScrollingFrame")
f1.Name = "OptionsFrame"
f1.Size = UDim2.new(0, 300, 0, 200)
f1.Position = UDim2.new(0.5, 50, 0.5, 0) 
f1.AnchorPoint = Vector2.new(0.5, 0.5)
f1.BackgroundColor3 = Color3.fromRGB(92, 92, 93)
f1.Parent = f
f1.Visible = true
f1.ScrollBarImageTransparency = 1
f1.ScrollBarThickness = 0

local f2 = Instance.new("ScrollingFrame")
f2.Name = "SettingsFrame"
f2.Size = UDim2.new(0, 300, 0, 200)
f2.Position = UDim2.new(0.5, 50, 0.5, 0) 
f2.AnchorPoint = Vector2.new(0.5, 0.5)
f2.BackgroundColor3 = Color3.fromRGB(92, 92, 93)
f2.Parent = f
f2.Visible = false
f2.ScrollBarImageTransparency = 1
f2.ScrollBarThickness = 0

local f4 = Instance.new("ScrollingFrame")
f4.Name = "TweenFrame"
f4.Size = UDim2.new(0, 300, 0, 200)
f4.Position = UDim2.new(0.5, 50, 0.5, 0) 
f4.AnchorPoint = Vector2.new(0.5, 0.5)
f4.BackgroundColor3 = Color3.fromRGB(92, 92, 93)
f4.Parent = f
f4.Visible = false
f4.ScrollBarImageTransparency = 1
f4.ScrollBarThickness = 0

local f3 = Instance.new("ScrollingFrame")
f3.Name = "VisualFrame"
f3.Size = UDim2.new(0, 300, 0, 200)
f3.Position = UDim2.new(0.5, 50, 0.5, 0) 
f3.AnchorPoint = Vector2.new(0.5, 0.5)
f3.BackgroundColor3 = Color3.fromRGB(92, 92, 93)
f3.Parent = f
f3.Visible = false
f3.ScrollBarImageTransparency = 1
f3.ScrollBarThickness = 0

local Corner2 = Instance.new("UICorner")
Corner2.Parent = f

local CornerTW = Instance.new("UICorner")
CornerTW.Parent = f4

local CornerBG = Instance.new("UICorner")
CornerBG.Parent = GBGF

local Corner3 = Instance.new("UICorner")
Corner3.Parent = f1

local CornerS = Instance.new("UICorner")
CornerS.Parent = f2

local CornerVi = Instance.new("UICorner")
CornerVi.Parent = f3

local TBS = Instance.new("TextBox")
TBS.Size = UDim2.new(0, 100, 0, 40)
TBS.Position = UDim2.new(0.5, -50, 0, 30)
TBS.AnchorPoint = Vector2.new(0.5, 0)
TBS.Text = "1"
TBS.Parent = f1


local BS = Instance.new("TextButton")
BS.Name = "SizeButton"
BS.BackgroundTransparency = 0.85
BS.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
BS.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
BS.Size = UDim2.new(0, 70, 0, 40)
BS.Position = UDim2.new(0.5, 70, 0, 30)
BS.AnchorPoint = Vector2.new(0.5, 0)
BS.Text = "Enter"
BS.Parent = f1

local Corner4 = Instance.new("UICorner")
Corner4.Parent = BS

local Corner5 = Instance.new("UICorner")
Corner5.Parent = TBS

local LabelS = Instance.new("TextLabel")
LabelS.BackgroundTransparency = 1
LabelS.TextColor = BrickColor.new("White")
LabelS.Size = UDim2.new(0, 70, 0, 20)
LabelS.Position = UDim2.new(0.5, -50, 0, 10)
LabelS.AnchorPoint = Vector2.new(0.5, 0)


LabelS.Text = "Size Multiplicator"
LabelS.TextScaled = true
LabelS.Parent = f1

local LabelB = Instance.new("TextLabel")
LabelB.BackgroundTransparency = 1
LabelB.TextColor = BrickColor.new("White")
LabelB.Size = UDim2.new(0, 70, 0, 20)
LabelB.Position = UDim2.new(0.5, 0, 0, 10)
LabelB.AnchorPoint = Vector2.new(0.5, 0)


LabelB.Text = "BackGround"
LabelB.TextScaled = true
LabelB.Parent = f2

local GBG = Instance.new("TextButton")
GBG.Name = "Galaxy Background"
GBG.BackgroundTransparency = 0.85
GBG.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
GBG.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
GBG.Size = UDim2.new(0, 40, 0, 40)
GBG.Position = UDim2.new(0.5, -70, 0, 30)
GBG.AnchorPoint = Vector2.new(0.5, 0)
GBG.Text = "Galaxy"
GBG.Parent = f2

local BBG = Instance.new("TextButton")
BBG.Name = "Black Background"
BBG.BackgroundTransparency = 0.85
BBG.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
BBG.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
BBG.Size = UDim2.new(0, 40, 0, 40)
BBG.Position = UDim2.new(0.5, -20, 0, 30)
BBG.AnchorPoint = Vector2.new(0.5, 0)
BBG.Text = "Black"
BBG.Parent = f2

local CornerGBG = Instance.new("UICorner")
CornerGBG.Parent = GBG

local CornerBBG = Instance.new("UICorner")
CornerBBG.Parent = BBG

local LabelD = Instance.new("TextLabel")
LabelD.BackgroundTransparency = 1
LabelD.TextColor = BrickColor.new("White")
LabelD.Size = UDim2.new(0, 70, 0, 20)
LabelD.Position = UDim2.new(0.5, 0, 0, 100)
LabelD.AnchorPoint = Vector2.new(0.5, 0)


LabelD.Text = "Drag"
LabelD.TextScaled = true
LabelD.Parent = f2

local DOB = Instance.new("TextButton")
DOB.Name = "ToggleB Drag"
DOB.BackgroundTransparency = 0.85
DOB.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
DOB.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
DOB.Size = UDim2.new(0, 100, 0, 40)
DOB.Position = UDim2.new(0.5, 0, 0, 150)
DOB.AnchorPoint = Vector2.new(0.5, 0)
DOB.Text = "Disabled"
DOB.Parent = f2

local D132 = Instance.new("UIDragDetector")
D132.Enabled = false
D132.Parent = ToggleButton



local CornerDob = Instance.new("UICorner")
CornerDob.Parent = DOB


--Size script



BS.MouseButton1Click:Connect(function()
	local V = TBS
	local number = tonumber(TBS.Text)

	if number and number == math.floor(number) then
		print("Int")
		local Char = player.Character or player.CharacterAdded:Wait()
		local Size = Char:ScaleTo(number)

	else
		print("Str")
	end
end)

--toggle button script 
ToggleButton.MouseButton1Click:Connect(function()
	f.Visible = not f.Visible
end)

-- walkspeed ui
local LabelW = Instance.new("TextLabel")
LabelW.BackgroundTransparency = 1
LabelW.TextColor = BrickColor.new("White")
LabelW.Size = UDim2.new(0, 70, 0, 20)
LabelW.Position = UDim2.new(0.5, -50, 0, 80)
LabelW.AnchorPoint = Vector2.new(0.5, 0)


LabelW.Text = "Walk Speed : "..humanoid.WalkSpeed
LabelW.TextScaled = true
LabelW.Parent = f1



humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
	LabelW.Text = "WalkSpeed : " .. humanoid.WalkSpeed
end)




local TBWS = Instance.new("TextBox")
TBWS.Size = UDim2.new(0, 100, 0, 40)
TBWS.Position = UDim2.new(0.5, -50, 0, 100)
TBWS.AnchorPoint = Vector2.new(0.5, 0)
TBWS.Text = humanoid.WalkSpeed
TBWS.Parent = f1


local WSE = Instance.new("TextButton")
WSE.Name = "WalkSpeedButton"
WSE.BackgroundTransparency = 0.85
WSE.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
WSE.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
WSE.Size = UDim2.new(0, 70, 0, 40)
WSE.Position = UDim2.new(0.5, 70, 0, 100)
WSE.AnchorPoint = Vector2.new(0.5, 0)
WSE.Text = "Enter"
WSE.Parent = f1


--Jump Height Ui
local JPTB = Instance.new("TextBox")
JPTB.Size = UDim2.new(0, 100, 0, 40)
JPTB.Position = UDim2.new(0.5, -50, 0, 170)
JPTB.AnchorPoint = Vector2.new(0.5, 0)
JPTB.Text = humanoid.JumpHeight
JPTB.Parent = f1


local JPE = Instance.new("TextButton")
JPE.Name = "JumpPowerButton"
JPE.BackgroundTransparency = 0.85
JPE.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
JPE.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
JPE.Size = UDim2.new(0, 70, 0, 40)
JPE.Position = UDim2.new(0.5, 70, 0, 170)
JPE.AnchorPoint = Vector2.new(0.5, 0)
JPE.Text = "Enter"
JPE.Parent = f1

local LabelJP = Instance.new("TextLabel")
LabelJP.BackgroundTransparency = 1
LabelJP.TextColor = BrickColor.new("White")
LabelJP.Size = UDim2.new(0, 70, 0, 20)
LabelJP.Position = UDim2.new(0.5, -50, 0, 150)
LabelJP.AnchorPoint = Vector2.new(0.5, 0)


LabelJP.Text = "Jump Height : "..humanoid.JumpHeight
LabelJP.TextScaled = true
LabelJP.Parent = f1

local Corner5 = Instance.new("UICorner")
Corner5.Parent = WSE

local Corner6 = Instance.new("UICorner")
Corner6.Parent = TBWS

local Corne11 = Instance.new("UICorner")
Corne11.Parent = JPTB

local Corner11 = Instance.new("UICorner")
Corner11.Parent = JPE

humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
	TBWS.Text = humanoid.WalkSpeed
end)

humanoid:GetPropertyChangedSignal("JumpHeight"):Connect(function()
	JPTB.Text = humanoid.JumpHeight
end)


--Jump Power Ui


local Toggle_JHTJP = Instance.new("TextButton")
Toggle_JHTJP.Parent = f1
Toggle_JHTJP.Position = UDim2.new(0.5, -120, 0, 245)
Toggle_JHTJP.AnchorPoint = Vector2.new(0.5, 0)
Toggle_JHTJP.Size = UDim2.new(0, 30, 0, 30)
Toggle_JHTJP.BackgroundTransparency = 0.8
Toggle_JHTJP.BackgroundColor3 = Color3.new(0, 0, 0)

if humanoid.UseJumpPower == true then
	Toggle_JHTJP.Text = "✅"

elseif humanoid.UseJumpPower == false then
	Toggle_JHTJP.Text = "❌"
else
	Toggle_JHTJP.Text = "attempt to index nil with 'UseJump.Value'"
end

Toggle_JHTJP.MouseButton1Click:Connect(function()
	if humanoid.UseJumpPower == true then
		humanoid.UseJumpPower = false
		Toggle_JHTJP.Text = "❌"
	elseif humanoid.UseJumpPower == false then
		humanoid.UseJumpPower = true	
		Toggle_JHTJP.Text = "✅"
	else 
		print("Error")
	end
end)






local JPTB1 = Instance.new("TextBox")
JPTB1.Size = UDim2.new(0, 100, 0, 40)
JPTB1.Position = UDim2.new(0.5, -50, 0, 240)
JPTB1.AnchorPoint = Vector2.new(0.5, 0)
JPTB1.Text = humanoid.JumpPower
JPTB1.Parent = f1


local JPE1 = Instance.new("TextButton")
JPE1.Name = "JumpPowerButton1"
JPE1.BackgroundTransparency = 0.85
JPE1.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
JPE1.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
JPE1.Size = UDim2.new(0, 70, 0, 40)
JPE1.Position = UDim2.new(0.5, 70, 0, 240)
JPE1.AnchorPoint = Vector2.new(0.5, 0)
JPE1.Text = "Enter"
JPE1.Parent = f1

local LabelJP1 = Instance.new("TextLabel")
LabelJP1.BackgroundTransparency = 1
LabelJP1.TextColor = BrickColor.new("White")
LabelJP1.Size = UDim2.new(0, 70, 0, 20)
LabelJP1.Position = UDim2.new(0.5, -50, 0, 220)
LabelJP1.AnchorPoint = Vector2.new(0.5, 0)


LabelJP1.Text = "Jump Power : "..humanoid.JumpPower
LabelJP1.TextScaled = true
LabelJP1.Parent = f1

local Corner12 = Instance.new("UICorner")
Corner12.Parent = JPE1

local Corner13 = Instance.new("UICorner")
Corner13.Parent = JPTB1

local Corner14 = Instance.new("UICorner")
Corner14.Parent = Toggle_JHTJP

humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
	JPTB1.Text = humanoid.JumpPower
end)

--Fly Ui

local Toggle_FLY = Instance.new("TextButton")
Toggle_FLY.Parent = f1
Toggle_FLY.Position = UDim2.new(0.5, 70, 0, 310)
Toggle_FLY.AnchorPoint = Vector2.new(0.5, 0)
Toggle_FLY.Text = "Toggle Infinite Jump"
Toggle_FLY.Size = UDim2.new(0, 70, 0, 40)
Toggle_FLY.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
Toggle_FLY.BackgroundTransparency = 0.85



local FSTB = Instance.new("TextBox")
FSTB.Size = UDim2.new(0, 100, 0, 40)
FSTB.Position = UDim2.new(0.5, -50, 0, 310)
FSTB.AnchorPoint = Vector2.new(0.5, 0)
FSTB.Text = "Off"
FSTB.Parent = f1

local FlyKeyCode = Instance.new("TextBox")
FlyKeyCode.Parent = f1
FlyKeyCode.Position = UDim2.new(0.5, -120, 0, 315)
FlyKeyCode.AnchorPoint = Vector2.new(0.5, 0)
FlyKeyCode.Size = UDim2.new(0, 30, 0, 30)
FlyKeyCode.BackgroundTransparency = 0.8
FlyKeyCode.BackgroundColor3 = Color3.new(0, 0, 0)
FlyKeyCode.Text = "KeyCode"

FlyKeyCode.Visible = false

local IJIS = false

local Corner14 = Instance.new("UICorner")
Corner14.Parent = Toggle_FLY

local Corner15 = Instance.new("UICorner")
Corner15.Parent = FSTB

local Corner16 = Instance.new("UICorner")
Corner16.Parent = FlyKeyCode

--Noclip Ui

local Toggle_Noclip = Instance.new("TextButton")
Toggle_Noclip.Parent = f1
Toggle_Noclip.Position = UDim2.new(0.5, 70, 0, 380)
Toggle_Noclip.AnchorPoint = Vector2.new(0.5, 0)
Toggle_Noclip.Text = "Toggle Noclip"
Toggle_Noclip.Size = UDim2.new(0, 70, 0, 40)
Toggle_Noclip.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
Toggle_Noclip.BackgroundTransparency = 0.85

Toggle_Noclip.MouseButton1Click:Connect(function()
	if Toggle_Noclip.Text == "Off" or Toggle_Noclip.Text == "Toggle Noclip" then
		Toggle_Noclip.Text = "On"
	else
		Toggle_Noclip.Text = "Off"
	end
end)

--Visual Owl Ui
local OW = Instance.new("TextBox")
OW.Size = UDim2.new(0, 35, 0, 40)
OW.Position = UDim2.new(0.5, -100, 0, 30)
OW.AnchorPoint = Vector2.new(0.5, 0)
OW.Text = "3"
OW.Parent = f3

local Corner18 = Instance.new("UICorner")
Corner18.Parent = OW

local OA = Instance.new("TextBox")
OA.Size = UDim2.new(0, 35, 0, 40)
OA.Position = UDim2.new(0.5, -55, 0, 30)
OA.AnchorPoint = Vector2.new(0.5, 0)
OA.Text = "10"
OA.Parent = f3


local OPS = Instance.new("TextBox")
OPS.Size = UDim2.new(0, 50, 0, 40)
OPS.Position = UDim2.new(0.5, -5, 0, 30)
OPS.AnchorPoint = Vector2.new(0.5, 0)
OPS.Text = player.Name
OPS.Parent = f3

local SPSB = Instance.new("TextButton")
SPSB.Size = UDim2.new(0, 50, 0, 20)
SPSB.Position = UDim2.new(0.5, -5, 0, 8)
SPSB.AnchorPoint = Vector2.new(0.5, 0)
SPSB.Text = "Self"
SPSB.Parent = f3

local SpUc = Instance.new("UICorner")
SpUc.Parent = SPSB

local SpUc1 = Instance.new("UICorner")
SpUc1.Parent = OPS

SPSB.MouseButton1Click:Connect(function()
	OPS.Text = player.Name
end)

local Corner19 = Instance.new("UICorner")
Corner19.Parent = OA

local CornerOPS = Instance.new("UICorner")
CornerOPS.Parent = OPS


local OB = Instance.new("TextButton")
OB.Name = "Owl Button"
OB.BackgroundTransparency = 0.85
OB.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
OB.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
OB.Size = UDim2.new(0, 70, 0, 40)
OB.Position = UDim2.new(0.5, 70, 0, 30)
OB.AnchorPoint = Vector2.new(0.5, 0)
OB.Text = "Execute"
OB.Parent = f3


local Corner54 = Instance.new("UICorner")
Corner54.Parent = OB

local LabelOG = Instance.new("TextLabel")
LabelOG.BackgroundTransparency = 1
LabelOG.TextColor = BrickColor.new("White")
LabelOG.Size = UDim2.new(0, 70, 0, 20)
LabelOG.Position = UDim2.new(0.5, -80, 0, 5)
LabelOG.AnchorPoint = Vector2.new(0.5, 0)


LabelOG.Text = "GAG Blood Owl"
LabelOG.TextScaled = true
LabelOG.Parent = f3

local LabelOGw = Instance.new("TextLabel")
LabelOGw.BackgroundTransparency = 1
LabelOGw.TextColor = BrickColor.new("White")
LabelOGw.Size = UDim2.new(0, 30, 0, 10)
LabelOGw.Position = UDim2.new(0.5, -100, 0, 20)
LabelOGw.AnchorPoint = Vector2.new(0.5, 0)


LabelOGw.Text = "Weight"
LabelOGw.TextScaled = true
LabelOGw.Parent = f3


local LabelOGA = Instance.new("TextLabel")
LabelOGA.BackgroundTransparency = 1
LabelOGA.TextColor = BrickColor.new("White")
LabelOGA.Size = UDim2.new(0, 30, 0, 10)
LabelOGA.Position = UDim2.new(0.5, -55, 0, 20)
LabelOGA.AnchorPoint = Vector2.new(0.5, 0)


LabelOGA.Text = "Age"
LabelOGA.TextScaled = true
LabelOGA.Parent = f3

--ESP script

local highlightEnabled = false
local RunService = game:GetService("RunService")

function ToggleHighlightsWithName(localPlayer)
	highlightEnabled = not highlightEnabled

	for _, player in ipairs(game.Players:GetPlayers()) do
		if player ~= localPlayer and player.Character then
			local char = player.Character

			-- Highlight
			local existing = char:FindFirstChild("Highlight")
			if highlightEnabled then
				if not existing then
					local hl = Instance.new("Highlight")
					hl.Name = "Highlight"
					hl.FillColor = Color3.fromRGB(255, 255, 0)
					hl.OutlineColor = Color3.fromRGB(0, 0, 0)
					hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
					hl.Parent = char
				end
			else
				if existing then
					existing:Destroy()
				end
			end

			-- Billboard name
			local head = char:FindFirstChild("Head")
			if head then
				local existingBillboard = head:FindFirstChild("NameTag")
				if highlightEnabled then
					if not existingBillboard then
						local billboard = Instance.new("BillboardGui")
						billboard.Name = "NameTag"
						billboard.Adornee = head
						billboard.AlwaysOnTop = true
						billboard.Size = UDim2.new(0, 200, 0, 50)
						billboard.StudsOffset = Vector3.new(0, 2, 0)
						billboard.Parent = head

						local textLabel = Instance.new("TextLabel")
						textLabel.Size = UDim2.new(1, 0, 1, 0)
						textLabel.BackgroundTransparency = 1
						textLabel.Text = player.Name
						textLabel.TextColor3 = Color3.new(1, 1, 0)
						textLabel.TextStrokeTransparency = 0
						textLabel.Font = Enum.Font.SourceSansBold
						textLabel.TextScaled = true
						textLabel.Parent = billboard
					end
				else
					if existingBillboard then
						existingBillboard:Destroy()
					end
				end
			end
		end
	end

	print("Player highlights toggled:", highlightEnabled and "ON" or "OFF")
end



-- Player Esp Gui

local LabelESP = Instance.new("TextLabel")
LabelESP.BackgroundTransparency = 1
LabelESP.TextColor = BrickColor.new("White")
LabelESP.Size = UDim2.new(0, 30, 0, 10)
LabelESP.Position = UDim2.new(0.5, 0, 0, 75)
LabelESP.AnchorPoint = Vector2.new(0.5, 0)


LabelESP.Text = "ESP"
LabelESP.TextScaled = true
LabelESP.Parent = f3

local PESP = Instance.new("TextButton")
PESP.Name = "ESP players"
PESP.BackgroundTransparency = 0.85
PESP.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
PESP.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
PESP.Size = UDim2.new(0, 70, 0, 40)
PESP.Position = UDim2.new(0.5, 0, 0, 100)
PESP.AnchorPoint = Vector2.new(0.5, 0)
PESP.Text = "Off"
PESP.Parent = f3

PESP.MouseButton1Click:Connect(function()
	if PESP.Text == "Off" then
		PESP.Text = "On"
		ToggleHighlightsWithName(player)
	elseif PESP.Text == "On" then
		PESP.Text = "Off"
		ToggleHighlightsWithName(player)
	end
end)

-- teleport button
local TPB = Instance.new("TextButton")
TPB.Name = "TP Button"
TPB.BackgroundTransparency = 0.85
TPB.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
TPB.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
TPB.Size = UDim2.new(0, 70, 0, 40)
TPB.Position = UDim2.new(0.5, 70, 0, 30)
TPB.AnchorPoint = Vector2.new(0.5, 0)
TPB.Text = "Execute"
TPB.Parent = f4

local LabelTP = Instance.new("TextLabel")
LabelTP.BackgroundTransparency = 1
LabelTP.TextColor = BrickColor.new("White")
LabelTP.Size = UDim2.new(0, 55, 0, 20)
LabelTP.Position = UDim2.new(0.5, -35, 0, 5)
LabelTP.AnchorPoint = Vector2.new(0.5, 0)


LabelTP.Text = "Teleport"
LabelTP.TextScaled = true
LabelTP.Parent = f4


local PST = Instance.new("TextBox")
PST.Size = UDim2.new(0, 50, 0, 40)
PST.Position = UDim2.new(0.5, -5, 0, 30)
PST.AnchorPoint = Vector2.new(0.5, 0)
PST.Text = player.Name
PST.Parent = f4

local CornerTPE = Instance.new("UICorner")
CornerTPE.Parent = TPB

local CornerTPST = Instance.new("UICorner")
CornerTPST.Parent = PST

--UnAnchoredTween Gui
local UAB = Instance.new("TextButton")
UAB.Name = "UA Button"
UAB.BackgroundTransparency = 0.85
UAB.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
UAB.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
UAB.Size = UDim2.new(0, 70, 0, 40)
UAB.Position = UDim2.new(0.5, 70, 0, 100)
UAB.AnchorPoint = Vector2.new(0.5, 0)
UAB.Text = "Execute"
UAB.Parent = f4

local LabelUA = Instance.new("TextLabel")
LabelUA.BackgroundTransparency = 1
LabelUA.TextColor = BrickColor.new("White")
LabelUA.Size = UDim2.new(0, 55, 0, 20)
LabelUA.Position = UDim2.new(0.5, -35, 0, 70)
LabelUA.AnchorPoint = Vector2.new(0.5, 0)


LabelUA.Text = "Bring Unanchored"
LabelUA.TextScaled = true
LabelUA.Parent = f4


local TPUATP = Instance.new("TextBox")
TPUATP.Size = UDim2.new(0, 50, 0, 40)
TPUATP.Position = UDim2.new(0.5, -5, 0, 100)
TPUATP.AnchorPoint = Vector2.new(0.5, 0)
TPUATP.Text = player.Name
TPUATP.Parent = f4

local CornerTPE = Instance.new("UICorner")
CornerTPE.Parent = TPB

local CornerTPST = Instance.new("UICorner")
CornerTPST.Parent = PST

--Un anchored orbit


local UAO = Instance.new("TextButton")
UAO.Name = "UA0 Button"
UAO.BackgroundTransparency = 0.85
UAO.BackgroundColor3 = Color3.new(0.182834, 0.183474, 0.185412)
UAO.TextColor3 = Color3.new(0.484459, 0.482124, 0.486809)
UAO.Size = UDim2.new(0, 70, 0, 40)
UAO.Position = UDim2.new(0.5, 70, 0, 170)
UAO.AnchorPoint = Vector2.new(0.5, 0)
UAO.Text = "Execute"
UAO.Parent = f4

local LabelUAO = Instance.new("TextLabel")
LabelUAO.BackgroundTransparency = 1
LabelUAO.TextColor = BrickColor.new("White")
LabelUAO.Size = UDim2.new(0, 55, 0, 20)
LabelUAO.Position = UDim2.new(0.5, -35, 0, 140)
LabelUAO.AnchorPoint = Vector2.new(0.5, 0)


LabelUAO.Text = "Orbit UnAnchored"
LabelUAO.TextScaled = true
LabelUAO.Parent = f4


local OUAS = Instance.new("TextBox")
OUAS.Size = UDim2.new(0, 50, 0, 40)
OUAS.Position = UDim2.new(0.5, -5, 0, 170)
OUAS.AnchorPoint = Vector2.new(0.5, 0)
OUAS.Text = player.Name
OUAS.Parent = f4
OUAS.Text = 10

local OUASpeed = tonumber(OUAS.Text)

local CornerUAO = Instance.new("UICorner")
CornerUAO.Parent = UAO

local CornerTPST12 = Instance.new("UICorner")
CornerTPST12.Parent = LabelUAO

--WalkSpeed script
WSE.MouseButton1Click:Connect(function()
	local v1 = TBWS
	local number = tonumber(TBWS.Text)

	if number and number == math.floor(number) then
		print("Int")
		local Char = player.Character or player.CharacterAdded:Wait()
		Char.Humanoid.WalkSpeed = number

	else
		print("Str")
	end
end)

--JumpHeight Script
JPE.MouseButton1Click:Connect(function()
	local v2 = JPTB
	local number = tonumber(JPTB.Text)

	if number and number == math.floor(number) then
		print("Int")
		local Char = player.Character or player.CharacterAdded:Wait()
		Char.Humanoid.JumpHeight = number

	else
		print("Str")
	end
end)

--JumpPower Script
JPE1.MouseButton1Click:Connect(function()
	local v3 = JPTB1
	local number = tonumber(JPTB1.Text)

	if number and number == math.floor(number) then
		print("Int")
		local Char = player.Character or player.CharacterAdded:Wait()
		Char.Humanoid.JumpPower = number

	else
		print("Str")
	end
end)

--fly script

--local character = player.Character or player.CharacterAdded:Wait()
--local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
--
--local flying = false
--local bodyVelocity
--
--local function toggleFly()
--	flying = not flying
--
--	if flying then
--		bodyVelocity = Instance.new("BodyVelocity")
--		bodyVelocity.Velocity = Vector3.new(0, 0, 0)
--		bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
--		bodyVelocity.Parent = humanoidRootPart
--	else
--		if bodyVelocity then
--			bodyVelocity:Destroy()
--		end
--	end
--end




--PlayerTab
LocalPlayerTab.MouseButton1Click:Connect(function()
	f1.Visible = true
	f2.Visible = false
	f3.Visible = false
	f4.Visible = false
end)

SettingsTab.MouseButton1Click:Connect(function()
	f2.Visible = true
	f1.Visible = false
	f3.Visible = false
	f4.Visible = false
end)

VisualsTab.MouseButton1Click:Connect(function()
	f3.Visible = true
	f2.Visible = false
	f1.Visible = false
	f4.Visible = false
end)

TweenTab.MouseButton1Click:Connect(function()
	f3.Visible = false
	f2.Visible = false
	f1.Visible = false
	f4.Visible = true
end)

GBG.MouseButton1Click:Connect(function()
	GBGF.Visible = true
end)

BBG.MouseButton1Click:Connect(function()
	GBGF.Visible = false
end)

DOB.MouseButton1Click:Connect(function()
	if D132.Enabled == false then
		D132.Enabled = true
		DOB.Text = "Enabled"
	elseif D132.Enabled == true then
		D132.Enabled = false
		DOB.Text = "Disabled"
	end
	
	
end)

--air jump 
local player = game.Players.LocalPlayer
local IJIS = false

Toggle_FLY.MouseButton1Click:Connect(function()
	IJIS = not IJIS -- toggle on/off

	if IJIS then
		print("Infinite Jump ON")
		FSTB.Text = "On"
	else
		print("Infinite Jump OFF")
		FSTB.Text = "Off"
	end

	while IJIS do
		task.wait()

		local character = player.Character
		if character then
			local humanoid = character:FindFirstChild("Humanoid")
			if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
				if humanoid.Jump == true then
					humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				end
			end
		end
	end
end)


function CreateGAGOwl(plrName : string, AgeInput, WeightInput)
	local Age = tonumber(AgeInput)
	local Weight = tonumber(WeightInput)

	local plr = game.Players:FindFirstChild(plrName)
	if not plr then
		warn("No Player Found:", plrName)
		return
	end

	print("Age:", Age)
	print("Weight:", Weight)

	local displayAge = Age or "??"
	local displayWeight = Weight or "??"

	local ToolOwl = Instance.new("Tool")
	ToolOwl.Name = "Blood Owl ["..tostring(displayWeight).." KG] ["..tostring(displayAge).." Age]"
	ToolOwl.RequiresHandle = true
	ToolOwl.Parent = plr.Backpack

	if typeof(Age) == "number" and typeof(Weight) == "number" then
		local AgeMult = Age/40
		if AgeMult < 1 then
			AgeMult = 1
		end
		local SizeMult = (Weight / 3) * AgeMult

		if SizeMult < 1 then
			SizeMult = SizeMult * 1.634
		end

		print("Owl Size mult:", SizeMult)

		local Part1 = Instance.new("Part")
		Part1.Name = "Handle"
		Part1.Size = Vector3.new(1, 1, 1)
		Part1.CanCollide = false
		Part1.Massless = true
		Part1.Anchored = false
		Part1.Parent = ToolOwl

		local BOwlMesh = Instance.new("SpecialMesh")
		BOwlMesh.MeshId = "rbxassetid://116095091020247"
		BOwlMesh.TextureId = "rbxassetid://71934190941112"
		BOwlMesh.MeshType = Enum.MeshType.FileMesh
		BOwlMesh.Scale = Vector3.new(3, 3, 4) * SizeMult
		BOwlMesh.VertexColor = Vector3.new(1, 1, 1)
		BOwlMesh.Parent = Part1
	else
		warn("Cannot calculate SizeMult: Age or Weight invalid.")
	end

	return ToolOwl
end

function TeleportToPlayer(playertotp, targetplayer)
	local tragetcharacter = playertotp.Character
	local targetHRP = tragetcharacter:FindFirstChild("HumanoidRootPart")
	local Pos = targetHRP.CFrame
	print(Pos)
	--tp
	playertotp.Character.HumanoidRootPart.CFrame = Pos
end


function TweenToggleToPlayer(playertoBring, targetplayer)
	local tragetcharacter = playertoBring.Character
	local targetHRP = tragetcharacter:FindFirstChild("HumanoidRootPart")
	local Pos = targetHRP.CFrame
	print(Pos)
	--bring
	local Target = targetplayer.Character.HumanoidRootPart.CFrame
	local TS = game:GetService("TweenService")
	local Bring = TS:Create(player.Character.HumanoidRootPart, TweenInfo.new(1), {CFrame = Target})
	Bring:Play()
end


OB.MouseButton1Click:Connect(function()
	print("Creating Owl...")

	local playerName = OPS.Text
	local Age = OA.Text
	local Weight = OW.Text

	CreateGAGOwl(playerName, Age, Weight)
end)

TPB.MouseButton1Click:Connect(function()
	print("Teleporting...")
	TeleportToPlayer(player, PST.Text)
end)

function PullUnanchoredPartsToPlayer(targetPlayer)
	if not targetPlayer or not targetPlayer.Character then
		warn("Invalid player or character not loaded.")
		return
	end

	local root = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not root then
		warn("HumanoidRootPart not found.")
		return
	end

	local tweenService = game:GetService("TweenService")

	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj.Anchored and not obj:IsDescendantOf(targetPlayer.Character) then
			local direction = (root.Position - obj.Position).Unit
			local distance = (root.Position - obj.Position).Magnitude
			local speed = 100 -- studs per second
			local travelTime = distance / speed

			local tweenInfo = TweenInfo.new(travelTime, Enum.EasingStyle.Linear)
			local goal = { Position = root.Position + Vector3.new(0, 2, 0) } -- Move slightly above the player

			local tween = tweenService:Create(obj, tweenInfo, goal)
			tween:Play()
		end
	end
end

UAB.MouseButton1Click:Connect(function()
	local TUAP = TPUATP.Text 
	print("Requested player: " .. TUAP)

	local targetPlayer = game.Players:FindFirstChild(TUAP)
	if targetPlayer then
		PullUnanchoredPartsToPlayer(targetPlayer)
	else
		warn("Player '" .. TUAP .. "' not found.")
	end
end)

--uao
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local orbitEnabled = false
local orbitConnections = {}

function ToggleOrbitAroundPlayer(player, orbitSpeed)
	orbitEnabled = not orbitEnabled

	-- Stop orbit
	if not orbitEnabled then
		for _, conn in ipairs(orbitConnections) do
			if typeof(conn) == "RBXScriptConnection" then
				conn:Disconnect()
			end
		end
		orbitConnections = {}
		print("Orbit disabled")
		return
	end

	print("Orbit enabled")

	local character = player.Character
	local hrp = character and character:FindFirstChild("HumanoidRootPart")
	if not hrp then
		warn("HumanoidRootPart not found!")
		return
	end

	local parts = {}
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") and not obj.Anchored and not obj:IsDescendantOf(character) then
			table.insert(parts, obj)
		end
	end

	for i, part in ipairs(parts) do
		local angleOffset = math.rad((360 / #parts) * i)
		local radius = 10 + (i % 4) * 7
		local height = 4 + (i % 2) * 3
		local t = 0

		local conn
		conn = RunService.Heartbeat:Connect(function(dt)
			if not orbitEnabled or not part or not part.Parent or not player.Character or not hrp then
				conn:Disconnect()
				return
			end

			t += dt * orbitSpeed
			local x = math.cos(t + angleOffset) * radius
			local z = math.sin(t + angleOffset) * radius
			local targetPos = hrp.Position + Vector3.new(x, height, z)

			part.CFrame = part.CFrame:Lerp(CFrame.new(targetPos), 0.2)
		end)

		table.insert(orbitConnections, conn)
	end
end



local player = game.Players.LocalPlayer

UAO.MouseButton1Click:Connect(function()
	ToggleOrbitAroundPlayer(player, OUASpeed)
end)


local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local noclipEnabled = false
local noclipConnection

function ToggleNoclip()
	noclipEnabled = not noclipEnabled

	if noclipEnabled then
		print("Noclip enabled")
		noclipConnection = RunService.Stepped:Connect(function()
			local character = player.Character
			if not character then return end

			for _, part in ipairs(character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = false
				end
			end
		end)
	else
		print("Noclip disabled")
		if noclipConnection then
			noclipConnection:Disconnect()
			noclipConnection = nil
		end

		-- Optionally restore collision
		local character = player.Character
		if character then
			for _, part in ipairs(character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end
	end
end


Toggle_Noclip.MouseButton1Click:Connect(function()
	ToggleNoclip()
end)
